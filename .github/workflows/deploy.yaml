name: Deploy Single-Spa Root App

# 触发条件
on:
  workflow_dispatch: # 手动触发
  push: # master/test/dev 分支更新时触发
    branches: [ 'master', 'test', 'dev' ]

# 环境变量
env:
  ROOT_STATIC_PATH: /root/single_spa # 部署服务器的主应用资源路径
  DIST_NAME: dist-${{ github.run_number }}.tar # Github Actions 压缩文件名称
  HOST: ${{ secrets['HOST_${github.ref_name^^}'] }}

# 任务
jobs:
  # 构建主应用任务
  build-root-app:
    # 运行在 Ubuntu 上
    runs-on: ubuntu-latest
    
    # 步骤
    steps:
    # 拉取代码
    - uses: actions/checkout@v3

    # 设置 Node 环境
    - name: Node
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    # 构建
    - name: Build
      run: |
        npm install # 安装 node modules
        npm run build # 打包
        cd dist # 进入静态资源目录
        rm -f ${{ env.DIST_NAME }} # 删除之前存在的压缩文件
        tar -zcf ../${{ env.DIST_NAME }} * # 压缩
    
    # 上传资源，给其他任务使用
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.DIST_NAME }}
        path: ${{ env.DIST_NAME }}

  # 上传并部署主应用-生产环境
  deploy-root-app-pro:
    if: ${{ github.ref_name == 'master' }}
    # 依赖构建任务
    needs: build-root-app
    # 运行在 Ubuntu 上
    runs-on: ubuntu-latest
    
    outputs:
      host: ${{ steps.get_secrets_name.outputs.host }}
    
    # 步骤
    steps:
    # 下载资源
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.DIST_NAME }}

    # 根据触发分支选择不同环境的 secrets name
    - name: Get Secrets Name
      id: get_secrets_name
      run: |
        value = HOST_${{ github.ref_name }}
        echo "::set-output name=host::${value^^}"

    - run: echo ${{ steps.get_secrets_name.outputs.host }}
    # 上传资源到部署服务器
    - name: Upload Host
      uses: easingthemes/ssh-deploy@main
      env:
        REMOTE_HOST: ${{ secrets[steps.get_secrets_name.outputs.host] }} # 部署服务器地址
        REMOTE_USER: ${{ secrets.USERNAME_PRO }} # 部署服务器用户名
        SSH_PRIVATE_KEY: ${{ secrets.KEY_PRO }} # 部署服务器私钥
        ARGS: '-rltgoDzvO --delete'
        SOURCE: ${{ env.DIST_NAME }} # Github Actions 压缩文件路径
        TARGET: ${{ env.ROOT_STATIC_PATH }} # 部署服务器资源路径

    # 解压静态资源
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_PRO }} # 部署服务器地址
        username: ${{ secrets.USERNAME_PRO }} # 部署服务器用户名
        key: ${{ secrets.KEY_PRO }} # 部署服务器私钥
        port: ${{ secrets.PORT_PRO }} # 部署服务器端口
        script: |
          cd ${{ env.ROOT_STATIC_PATH }}
          tar -zxf ${{ env.DIST_NAME }}
          rm -f ${{ env.DIST_NAME }}
        
  # 上传并部署主应用-测试环境
  deploy-root-app-test:
    if: ${{ github.ref_name == 'test' }}
    # 依赖构建任务
    needs: build-root-app
    # 运行在 Ubuntu 上
    runs-on: ubuntu-latest 
    
    # 步骤
    steps:
    # 下载资源
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.DIST_NAME }}

    # 上传资源到部署服务器
    - name: Upload Host
      uses: easingthemes/ssh-deploy@main
      env:
        REMOTE_HOST: ${{ secrets.HOST_TEST }} # 部署服务器地址
        REMOTE_USER: ${{ secrets.USERNAME_TEST }} # 部署服务器用户名
        SSH_PRIVATE_KEY: ${{ secrets.KEY_TEST }} # 部署服务器私钥
        ARGS: '-rltgoDzvO --delete'
        SOURCE: ${{ env.DIST_NAME }} # Github Actions 压缩文件路径
        TARGET: ${{ env.ROOT_STATIC_PATH }} # 部署服务器资源路径

    # 解压静态资源
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_TEST }} # 部署服务器地址
        username: ${{ secrets.USERNAME_TEST }} # 部署服务器用户名
        key: ${{ secrets.KEY_TEST }} # 部署服务器私钥
        port: ${{ secrets.PORT_TEST }} # 部署服务器端口
        script: |
          cd ${{ env.ROOT_STATIC_PATH }}
          tar -zxf ${{ env.DIST_NAME }}
          rm -f ${{ env.DIST_NAME }}

  # 上传并部署主应用-开发环境
  deploy-root-app-dev:
    if: ${{ github.ref_name == 'dev' }}
    # 依赖构建任务
    needs: build-root-app
    # 运行在 Ubuntu 上
    runs-on: ubuntu-latest 
    
    # 步骤
    steps:
    # 下载资源
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.DIST_NAME }}

    # 上传资源到部署服务器
    - name: Upload Host
      uses: easingthemes/ssh-deploy@main
      env:
        REMOTE_HOST: ${{ secrets.HOST_DEV }} # 部署服务器地址
        REMOTE_USER: ${{ secrets.USERNAME_DEV }} # 部署服务器用户名
        SSH_PRIVATE_KEY: ${{ secrets.KEY_DEV }} # 部署服务器私钥
        ARGS: '-rltgoDzvO --delete'
        SOURCE: ${{ env.DIST_NAME }} # Github Actions 压缩文件路径
        TARGET: ${{ env.ROOT_STATIC_PATH }} # 部署服务器资源路径

    # 解压静态资源
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_DEV }} # 部署服务器地址
        username: ${{ secrets.USERNAME_DEV }} # 部署服务器用户名
        key: ${{ secrets.KEY_DEV }} # 部署服务器私钥
        port: ${{ secrets.PORT_DEV }} # 部署服务器端口
        script: |
          cd ${{ env.ROOT_STATIC_PATH }}
          tar -zxf ${{ env.DIST_NAME }}
          rm -f ${{ env.DIST_NAME }}
