name: Deploy Single-Spa Root App

# 触发条件
on:
  push: # master/release/dev 分支更新时
    branches: [ 'master', 'release', 'dev' ]

# 环境变量
env:
  ROOT_STATIC_PATH: /root/single_spa # 部署服务器，主应用资源路径
  ROOT_PATH: single-spa-root-template # Github Actions 主应用代码路径
  DIST_NAME: dist-${{ github.run_number }}.zip # 压缩文件名称
  SOURCE_DIST: dist/dist-${{ github.run_number }}.zip # 压缩文件路径

# 任务
jobs:
  # 构建主应用任务
  build-root-app:
    # 运行在 Ubuntu 上
    runs-on: ubuntu-latest
    
    # 步骤
    steps:
    # 拉取代码
    - uses: actions/checkout@v3

    # 设置 Node 环境
    - name: Node
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    # 构建
    - name: Build
      run: |
        npm install # 安装 node modules
        npm run build # 打包
        cd dist # 进入静态资源目录
        rm -f ${env.DIST_NAME} # 删除之前存在的压缩文件
        zip -r ${env.DIST_NAME} * # 压缩

  # 上传并部署主应用-生产环境
  deploy-root-app:
    # 运行在 Ubuntu 上
    runs-on: ubuntu-latest 
    
    # 步骤
    steps:
    # 上传静态资源
    - name: Upload
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.KEY_PRO }}
        ARGS: '-rltgoDzvO --delete'
        SOURCE: ${{ env.SOURCE_DIST }}
        REMOTE_HOST: ${{ secrets.HOST_PRO }}
        REMOTE_USER: ${{ secrets.USERNAME_PRO }}
        TARGET: ${{ env.ROOT_STATIC_PATH }}

    # 解压静态资源
    - name: Deploy
      if: ${{ github.ref_name == 'master' }}
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_PRO }}
        username: ${{ secrets.USERNAME_PRO }}
        key: ${{ secrets.KEY_PRO }}
        port: ${{ secrets.PORT_PRO }}
        script: |
          cd ${env.ROOT_STATIC_PATH}
          unzip ${env.DIST_NAME}
          rm -f ${env.DIST_NAME}
        
